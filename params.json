{"name":"Repo.js","tagline":"Object repository built on top of Javascript native arrays","body":"Repo.js\r\n=======\r\nA little project to make your life storing collections in javascript a little easier!\r\n\r\nUsage:\r\n\r\nLike an array! push objects to it, make modifications to objects, etc.\r\n\r\nRepo.js will keep track of your changes, call .save() to go to your callback for saving/updating/removing/etc!\r\n\r\nSettings:\r\n```javascript\r\nvar r = new Repo({\r\n    name: \"Contacts\",                   //The name of the repo\r\n    useLocalStorage: true               //Whether or not to utilize localStorage when calling persist()\r\n    indexBy: \"id\",                      //What key to index on\r\n    createInBatch: true,                //Whether to fire back a collection of items or one item at a time\r\n    updateInBatch: false,               //Same, but for updates.\r\n    deleteInBatch: false,               //Same, but for deletions\r\n    saveMethod: function(item, mode){   //Method to fire upon calling .save()\r\n        switch(mode){\r\n            case Repo.mode.Create:\r\n                //Creation Logic\r\n                break;\r\n            case Repo.mode.Update:\r\n                //Update Logic\r\n                break;\r\n            case Repo.mode.Delete:\r\n                //Deletion Logic\r\n                break;\r\n        }\r\n    }\r\n});\r\n```\r\n\r\n\r\nIn the Pipeline:\r\n\r\n- [X] [~~Automated localStorage persistence~~](https://github.com/phalpin/Repo.js/commit/4c8cf2d7d1315e93d092a0a4116840b77b6f8d3b)\r\n- [ ] Extension to forEach to indicate saved/edited metadata in addition to key -> value\r\n- [ ] Automated watches for modifications\r\n- [ ] Routine polling for index updates\r\n- [ ] WebWorker support for reindexing all repositories\r\n- [ ] linq-style queries against the repository.\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}